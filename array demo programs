
/********************************************************
*
*	This program demonstrate the concept of Array
*	1. Array is a fixed length data Structure used to hold more than one value
*	2.
*
*
********************************************************/

class ArrayDemo{

	public static void main(String args[])
	{
			// memory for 20 bytes is created dynamically for reference arr.
		int arr[] = new int[5];
		
			// you can also do this to declare an array
			int []array;
			array = new int[5];
		
		// initializing elements of array.
		
		int []arr1= {10,20,30,40};	// this is called as explicit array initialization.
		
		int []arr2 = new int[]{1,2,3,4,5,6,7};	// allowed

		// creating array		
		int []arr3 = new int[5];
		// initializing
			arr3[0]=10;
			arr3[1]=20;
			arr3[2]=30;
			arr3[3]=40;
			arr3[4]=50;

			// accessing an array
		System.out.println("Elements of array arr3 are : ");
		for(int i =0;i<arr3.length;i++)
		{
			System.out.print(arr3[i]+"  ");
		}
		System.out.println("\n");

		//You can also place the brackets after the array's name:
		// this form is discouraged
		
		float anArrayOfFloats[];
		
		//However, convention discourages this form; the brackets identify the array type and should appear with the type designation.
		

		// we can also get the length of array by using length..
		System.out.println(arr.length);
		System.out.println(arr1.length);


		System.out.println("Elements of array arr1 are : ");
		for(int i =0;i<arr1.length;i++)	// if we do not have the size of array we can get it with the helpo of length.
		{
			System.out.print(arr1[i]+"  ");
		}
		System.out.println("\n");
		System.out.println("Elements of array arr2 are : ");
		for(int i =0;i<arr2.length;i++)
		{
			System.out.print(arr2[i]+"  ");
		}
		System.out.println("\n");
			}

}



/********************************************************
*
*	This program demonstrate the concept of Array
*	1. Array is a fixed length data Structure used to hold more than one value
*	2. arraycopy() : is a static method of java.lang.System class
*					this method is used to copy the contents of one array to another.
*
*	3. clone() : this method is same as we write our own copy constructor is c++
*				this method is used to achieve the concept of deep copy.
*
*	4. sort() : this method is used to sort() the array
				this method uses quick sort algorithm.
				this method is defined in java.util.Arrays class.
********************************************************/
import java.lang.*;
import java.util.*;
class ArrayDemo2
{

	public static void main(String args[])
	{
		int []arr1 = new int[]{1,2,3,4,5,6};
		int []arr2 = new int[arr1.length];
		
		
		// demonstration of array copy
		
		
		
		System.out.println("Demonstration of arraycopy()...");
		System.arraycopy(arr1,0,arr2,0,arr1.length);
		for(int i =0;i<arr1.length;i++)
		{
			System.out.print(arr2[i]+" ");
		}
	
	
		// demonstration of clone
		int []arr3 = {11,22,33,44,55,66,77};
		int []clone_arr;
		System.out.println("\narray using clone... ");
		clone_arr = (int [])arr3.clone();
		
		for(int i =0;i<clone_arr.length;i++)
		{
			System.out.print(clone_arr[i]+" ");
		}
		
		// demonstration of sort()
		System.out.prinln("..... Demonstration of sort()...");
		int []arr4 = new int[]{4,32,1,7,6,5,3,4,5};
		Arrays.sort(arr4);
		for(int i =0;i<arr4.length;i++)
		{
			System.out.print(arr4[i]+" ");
		}
	}    
}


/********************************************************
*
*	This program demonstrate the concept of Multi Dimensional Array
*	
*	1. what is ragged array?
*			it is possible to create an array with different number of columns in each row
*			such an array is called as ragged array.
*
********************************************************/
import java.util.*;
import java.io.*;
class ArrayDemo3{

	public static void main(String args[])
	{
		// multi dimensional array can be created as :
		int [][] arr = new int[][]{{1,2},{3,4}};
		
			
		for(int i =0;i<arr.length;i++)
		{
			for(int j =0;j<arr[i].length;j++)
			{
				System.out.print(arr[i][j]+" ");
			}
			System.out.println("\n");
		}
		
		
		// we can also create multi dimensional array using ragged array
		
		int [][] ragged_array = new int[4][];
		
		ragged_array[0]= new int[4];
		ragged_array[1]= new int[2];
		ragged_array[2]= new int[5];
		ragged_array[3]= new int[3];
		
		for(int i =0;i<ragged_array.length;i++)
		{
			for(int j =0;j<ragged_array[i].length;j++)
			{
				ragged_array[i][j]=i*j;
			}
		}
	
		System.out.println("Demonstration of ragged Array...");
		for(int i =0;i<ragged_array.length;i++)
		{
			for(int j =0;j<ragged_array[i].length;j++)
			{
				System.out.print(ragged_array[i][j]+"  ");
			}
			System.out.println("\n");
		}
	}

}



/********************************************************
*
*	This program demonstrate some methods of Array
*	1. copyOfRange() : this method os used to copy from the given range to the array
*	2. fill() : if we want to fill the array with particular value
				then we have to use this method
				
	both of these methodes are defined in java.util.Arrays class.			
*

********************************************************/

import java.util.*;
class ArrayDemo4{

	public static void main(String args[])
	{
		char[] copyFrom = {'d', 'e', 'c', 'a', 'f', 'f', 'e',
            'i', 'n', 'a', 't', 'e', 'd'};
            
        char[] copyTo = java.util.Arrays.copyOfRange(copyFrom, 2, 9);
        
        System.out.println(new String(copyTo));

	int []arr1 = {1,2,3,4};
	int []arr2= new int[5];// = {1,2,3,4};
		
	Arrays.fill(arr2,100);
	for(int i =0;i<arr2.length;i++)
	{
		System.out.print(arr2[i]+" ");
	}
	}

}






